/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-06-21 00:22:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class modify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1685681150661L));
    _jspx_dependants.put("jar:file:/D:/_spring_workspace/_spring_project1/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/spring/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>user modify page</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/header.jsp", out, false);
      out.write("\n");
      out.write("	<h1 align=\"center\">내 정보 수정</h1><br><br>\n");
      out.write("	<div class=\"container\">\n");
      out.write("	\n");
      out.write("	<form action=\"/user/modify\" method=\"post\">\n");
      out.write("	<div class=\"input-group mb-3\">\n");
      out.write("  <span class=\"input-group-text\" id=\"basic-addon1\">ID</span>\n");
      out.write("  <input type=\"text\" class=\"form-control\" name=\"id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${uvo.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly=\"readonly\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n");
      out.write("</div>\n");
      out.write("	<div class=\"input-group mb-3\" id=\"pw_div\">\n");
      out.write("  <span class=\"input-group-text\" id=\"basic-addon1\">기존 비밀번호</span>\n");
      out.write("  <input type=\"password\" class=\"form-control\" id=\"pw\" name=\"pw\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n");
      out.write("  <button type=\"button\" id=\"pw_color\" class=\"btn btn-secondary\" onclick=\"pwcheck()\">PW확인</button>\n");
      out.write("</div>\n");
      out.write("	<div class=\"input-group mb-3\">\n");
      out.write("  <span class=\"input-group-text\" id=\"basic-addon1\">Name</span>\n");
      out.write("  <input type=\"text\" class=\"form-control\" name=\"name\" aria-label=\"Username\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${uvo.name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" aria-describedby=\"basic-addon1\">\n");
      out.write("</div>\n");
      out.write("	<div class=\"input-group mb-3\">\n");
      out.write("  <span class=\"input-group-text\" id=\"basic-addon1\">Email</span>\n");
      out.write("  <input type=\"email\" class=\"form-control\" name=\"email\" aria-label=\"Username\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${uvo.email }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" aria-describedby=\"basic-addon1\">\n");
      out.write("</div>\n");
      out.write("	<div class=\"input-group mb-3\">\n");
      out.write("  <span class=\"input-group-text\" id=\"basic-addon1\">Address</span>\n");
      out.write("  <input type=\"text\" class=\"form-control\" name=\"home\" aria-label=\"Username\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${uvo.home }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" aria-describedby=\"basic-addon1\">\n");
      out.write("</div>\n");
      out.write("	<div class=\"input-group mb-3\">\n");
      out.write("  <span class=\"input-group-text\" id=\"basic-addon1\">Age</span>\n");
      out.write("  <input type=\"text\" class=\"form-control\" name=\"age\" aria-label=\"Username\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${uvo.age }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" aria-describedby=\"basic-addon1\">\n");
      out.write("</div>\n");
      out.write("		<div align=\"center\">\n");
      out.write("		<button type=\"submit\" class=\"btn btn-success\" id=\"sbmBtn\">수정완료</button>\n");
      out.write("		<a href=\"/\"><button type=\"button\" class=\"btn btn-secondary\">메인화면으로</button></a>\n");
      out.write("		</div>\n");
      out.write("	</form>\n");
      out.write("	</div>\n");
      out.write("	<script type=\"text/javascript\">\n");
      out.write("		function pwcheck(){\n");
      out.write("			let pw = document.getElementById(\"pw\").value;\n");
      out.write("			console.log(pw);\n");
      out.write("			checkpwToServer(pw).then(result => {\n");
      out.write("				\n");
      out.write("				if(result>0 && (document.getElementById('pw').name == 'pw')){\n");
      out.write("					alert(\"pw일치\");\n");
      out.write("				document.getElementById('pw_color').className = 'btn btn-success';\n");
      out.write("				document.getElementById('pw').setAttribute(\"name\",\"old_pw\");\n");
      out.write("				const div = document.getElementById(\"pw_div\");\n");
      out.write("				div.insertAdjacentHTML(\"afterEnd\", `<div class=\"input-group mb-3\">\n");
      out.write("					<span class=\"input-group-text\" id=\"basic-addon1\">새 비밀번호</span>\n");
      out.write("					<input type=\"password\" class=\"form-control\" name=\"pw\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n");
      out.write("					</div>`);\n");
      out.write("				}\n");
      out.write("				else{\n");
      out.write("					alert(\"pw불일치\");\n");
      out.write("				document.getElementById('pw_color').className = 'btn btn-danger';\n");
      out.write("				}\n");
      out.write("			});\n");
      out.write("			console.log(document.getElementById(\"pw_color\").value);\n");
      out.write("			\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		async function checkpwToServer(pw){\n");
      out.write("			try{\n");
      out.write("				const resp = await fetch('/user/'+pw);\n");
      out.write("				const result = await resp.json();\n");
      out.write("				return result;\n");
      out.write("			}catch(err){\n");
      out.write("				console.log(err);\n");
      out.write("			}\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		document.getElementById('sbmBtn').addEventListener('click', ()=>{\n");
      out.write("		    if(document.getElementById(\"pw_color\").value == \"1\"){\n");
      out.write("		        document.getElementById(\"pw\").disabled =\"true\";\n");
      out.write("		    }\n");
      out.write("		})\n");
      out.write("	\n");
      out.write("	</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
