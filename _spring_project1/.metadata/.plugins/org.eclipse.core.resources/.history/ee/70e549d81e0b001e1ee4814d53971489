package com.myweb.www.controller;


import java.util.List;

import javax.inject.Inject;

import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.myweb.www.domain.BoardDTO;
import com.myweb.www.domain.BoardVO;
import com.myweb.www.domain.FileVO;
import com.myweb.www.domain.PagingVO;
import com.myweb.www.handler.FileHandler;
import com.myweb.www.handler.PagingHandler;
import com.myweb.www.service.BoardService;

import lombok.extern.slf4j.Slf4j;


@RequestMapping("/board/*")
@Controller
@Slf4j
public class BoardController{
	@Inject
	private BoardService bsv;
	
	@Inject
	private FileHandler fhd;
	
	@GetMapping("home")
	public String home(Model m) {
		return "/home";
	}
	
	@GetMapping("register")
	public String registerGet(Model m) {
		return "/board/register";
	}
	
	@PostMapping("register")
	public String registerPost(BoardVO bvo, RedirectAttributes ra, @RequestParam(name="files", required= false)MultipartFile[] files) {
		log.info(">>> bvo : "+bvo);
		log.info(">>> files : "+files.toString());
		List<FileVO> flist = null;
		
		if(files[0].getSize()>0) {
			flist = fhd.uploadFiles(files);
		}else {
			log.info("file null");
		}
		
		BoardDTO bdto = new BoardDTO(bvo,flist);
		int isOk = bsv.register(bdto);
		
//		int isOk = bsv.register(bvo);
		
		log.info(">>> 게시글 등록 : "+(isOk>0?"성공":"실패"));
		// 가져가야할 객체 or 값이 있으면 ra.addAttribute ... 
		return "redirect:/board/list"; 
		// /board/list 로 할경우 list.jsp로 바로 이동
		// redirect:/board/list 로 할 경우 controller의 list로 이동
	}
	
	@GetMapping("list")
	public String listGet(Model m, PagingVO pvo) { // pageNo,qty는 파라미터에서 받아와서 자동으로 받아와서 pvo 만들어줌
		log.info(">>> pvo.getPageNo : "+pvo.getPageNo());
		List<BoardVO> list = bsv.showlist(pvo);
		m.addAttribute("list",list);
		int totalCount = bsv.getTotalCount();
		PagingHandler ph = new PagingHandler(pvo, totalCount);
		m.addAttribute("pgh",ph);
		return "/board/list";
	}
	
	@GetMapping("post")
	public void postGet(Model m, @RequestParam("bno")int bno, HttpServletRequest request) { // void로 하면 자기 자신한테 돌아감
//		BoardVO bvo = bsv.showpost(bno);
		BoardDTO bdto = bsv.showpost(bno);
		bsv.upcount(bno);
		m.addAttribute("bdto", bdto);
	}
	
	@GetMapping("modify")
	public void modifyGet(Model m, @RequestParam("bno")int bno, HttpServletRequest request) { // void로 하면 자기 자신한테 돌아감
		BoardDTO bdto = bsv.showpost(bno);
		m.addAttribute("bdto", bdto);
	}
	
	@PostMapping("modify")
	public String modifyPost(BoardVO bvo, RedirectAttributes ra) {
		int isOk = bsv.modify(bvo);
		log.info(">>> 수정 : "+(isOk>0?"성공":"실패"));
		ra.addFlashAttribute("msg_modify", isOk);
		return "redirect:/board/list"; 
		// /board/list 로 할경우 list.jsp로 바로 이동
		// redirect:/board/list 로 할 경우 controller의 list로 이동
	}
	
	@GetMapping("delete")
	public String delete(@RequestParam("bno")int bno, RedirectAttributes ra) {
		int isOk = bsv.delete(bno);
		log.info(">>> 삭제 : "+(isOk>0?"성공":"실패"));
		ra.addFlashAttribute("msg_delete", isOk);
		return "redirect:/board/list";
		// /board/list 로 할경우 list.jsp로 바로 이동
		// redirect:/board/list 로 할 경우 controller의 list로 이동
	}
	
	
}
